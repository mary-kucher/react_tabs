{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTabId","onTabSelected","selectedTab","find","tab","id","className","map","classNames","href","onClick","selectTab","title","content","App","useState","setSelectedTab","ReactDOM","render","document","getElementById"],"mappings":"kNAUaA,EAAwB,SAAC,GAEhC,IADFC,EACC,EADDA,KAAMC,EACL,EADKA,cAAeC,EACpB,EADoBA,cAEjBC,EAAcH,EAAKI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOL,KAC5CK,EAAKL,EAEJE,IACHG,EAAKN,EAAK,GAAGM,IASf,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKC,UAAU,gBAAf,SACE,6BAEIP,EAAKQ,KAAI,SAAAH,GAAG,OACV,oBACEE,UAAWE,IAAW,CACpB,YAAaH,IAAOD,EAAIC,KAE1B,UAAQ,MAJV,SAOE,mBACEI,KAAI,WAAML,EAAIC,IACd,UAAQ,UACRK,QAAS,kBAtBP,SAACN,GACbC,IAAOD,EAAIC,IACbJ,EAAcG,GAoBaO,CAAUP,IAH3B,SAKGA,EAAIQ,SAPFR,EAAIC,WAcnB,qBAAKC,UAAU,QAAQ,UAAQ,aAA/B,gBAEIJ,QAFJ,IAEIA,OAFJ,EAEIA,EAAaW,cC9CVd,EAAO,CAClB,CAAEM,GAAI,QAASO,MAAO,QAASC,QAAS,eACxC,CAAER,GAAI,QAASO,MAAO,QAASC,QAAS,eACxC,CAAER,GAAI,QAASO,MAAO,QAASC,QAAS,gBAG7BC,EAAgB,WAC3B,MAAsCC,mBAAShB,EAAK,IAApD,mBAAOG,EAAP,KAAoBc,EAApB,KAKA,OACE,sBAAKV,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCACsBJ,EAAYU,SAElC,cAAC,EAAD,CACEb,KAAMA,EACNC,cAAeE,EAAYG,GAC3BJ,cAZY,SAACG,GACjBY,EAAeZ,IAYX,UAAQ,oBCzBhBa,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.67b24433.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { Tab } from '../../types/Tab';\n\ntype Props = {\n  tabs: Tab[],\n  selectedTabId: string,\n  onTabSelected: (tabId: Tab) => void,\n};\n\nexport const Tabs: React.FC<Props> = (\n  { tabs, selectedTabId, onTabSelected },\n) => {\n  const selectedTab = tabs.find(tab => tab.id === selectedTabId);\n  let id = selectedTabId;\n\n  if (!selectedTab) {\n    id = tabs[0].id;\n  }\n\n  const selectTab = (tab: Tab) => {\n    if (id !== tab.id) {\n      onTabSelected(tab);\n    }\n  };\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {\n            tabs.map(tab => (\n              <li\n                className={classNames({\n                  'is-active': id === tab.id,\n                })}\n                data-cy=\"Tab\"\n                key={tab.id}\n              >\n                <a\n                  href={`#${tab.id}`}\n                  data-cy=\"TabLink\"\n                  onClick={() => selectTab(tab)}\n                >\n                  {tab.title}\n                </a>\n              </li>\n            ))\n          }\n        </ul>\n      </div>\n      <div className=\"block\" data-cy=\"TabContent\">\n        {\n          selectedTab?.content\n        }\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs';\nimport { Tab } from './types/Tab';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTab, setSelectedTab] = useState(tabs[0]);\n  const handleTab = (tab: Tab): void => {\n    setSelectedTab(tab);\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${selectedTab.title}`}\n      </h1>\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTab.id}\n        onTabSelected={handleTab}\n        data-cy=\"tab-content\"\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}